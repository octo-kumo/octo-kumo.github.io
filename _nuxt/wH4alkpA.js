import{E as D}from"./mpRoWkBO.js";import{m as x}from"./D9pKEzwB.js";import{u as J}from"./Nh6Nfyen.js";import{a as S}from"./5S_XvK3r.js";import{d as O,$,e as M,a0 as j,b as d,c as R,a as W,O as f,P as B,u as a,T as P}from"./Cdy4ovlM.js";import"./CXgh2bVR.js";import"./BK7BBDeP.js";import"./Bj2b9i9X.js";import"./DLOWyw5x.js";import"./DM9fvJ3D.js";import"./BSZFgSs5.js";const T={class:"flex flex-col lg:flex-row items-center justify-between justify-items-center"},V=O({__name:"WriteupStatistics",props:$({docs:{}},{modelValue:{default:{}},modelModifiers:{}}),emits:["update:modelValue"],setup(h){const b={dark:e=>`color-mix(in oklch, #66b1ff ${((1-e)*100).toFixed(2)}%, #f78989 ${(e*100).toFixed(2)}%)`,light:e=>`color-mix(in oklch, #409eff ${((1-e)*100).toFixed(2)}%, #f56c6c ${(e*100).toFixed(2)}%)`};function y(e){const t=b[C.value];return t&&t(e)||b.dark(e)}let r=!1;function g(e,t){if(r)return;console.log("syncing..."),r=!0;const o=e.options?.labels??[],s=t.options?.labels??[],n=(e?.chart?.w.globals.selectedDataPoints[0]??[]).map(l=>o[l]),i=(t?.chart?.w.globals.selectedDataPoints[0]??[]).map(l=>s[l]);n.filter(l=>!i.includes(l)).forEach(l=>t.toggleDataPointSelection(s.indexOf(l))),r=!1}const c=M(null),p=M(null),_=j(h,"modelValue"),k=h.docs,C=J(),w=d(()=>k.reduce((e,t)=>{const o=S(t);return o&&(e[o]||(e[o]=[]),e[o].push(t)),e},{})),v={dataLabels:{style:{fontFamily:"Jetbrains Mono"}},legend:{fontFamily:"Jetbrains Mono"},tooltip:{style:{fontFamily:"Jetbrains Mono"}},theme:{mode:C.value}},u=d(()=>{const e=Object.entries(w.value).map(([t,o],s,n)=>[t,o.length,y(s/n.length)]);return e.sort((t,o)=>o[1]-t[1]),{select(t,o,s){_.value.catFilter=s.selectedDataPoints[0].map(n=>e[n][0]),g(c.value,p.value)},series:e.map(([t,o,s])=>o),options:{labels:e.map(([t,o,s])=>t),colors:e.map(([t,o,s])=>s),title:{text:"By Writeup Count",style:{fontFamily:"Jetbrains Mono"}},plotOptions:{pie:{donut:{labels:{show:!0,value:{formatter:t=>`${t} wp`,fontFamily:"Jetbrains Mono"},total:{show:!0,label:"Writeups",fontFamily:"Jetbrains Mono",formatter:t=>t.globals.seriesTotals.reduce((o,s)=>o+s,0)}}}}},chart:{id:"catChart",background:"rgba(0, 0, 0, 0)"},...v}}}),m=d(()=>{const e=Object.entries(w.value).map(([t,o],s,n)=>[t,o.map(i=>i.points??0).reduce((i,F)=>i+F,0),y(s/n.length)]);return e.sort((t,o)=>o[1]-t[1]),{select(t,o,s){_.value.catFilter=s.selectedDataPoints[0].map(n=>e[n][0]),g(p.value,c.value)},series:e.map(([t,o,s])=>o),options:{labels:e.map(([t,o,s])=>t),colors:e.map(([t,o,s])=>s),title:{text:"By Total Points",style:{fontFamily:"Jetbrains Mono"}},chart:{id:"pntChart",background:"rgba(0, 0, 0, 0)"},plotOptions:{pie:{donut:{labels:{show:!0,value:{fontFamily:"Jetbrains Mono",formatter:t=>`${t}pt`},total:{show:!0,label:"Points",fontFamily:"Jetbrains Mono",formatter:t=>t.globals.seriesTotals.reduce((o,s)=>o+s,0)}}}}},...v}}});return(e,t)=>{const o=D;return W(),R("div",T,[f(o,null,{default:B(()=>[f(a(x),{ref_key:"catChart",ref:c,type:"donut",options:a(u).options,width:"350",height:"350",onDataPointSelection:a(u).select,series:("toRaw"in e?e.toRaw:a(P))(a(u).series)},null,8,["options","onDataPointSelection","series"]),f(a(x),{ref_key:"pntChart",ref:p,type:"donut",options:a(m).options,width:"350",height:"350",onDataPointSelection:a(m).select,series:("toRaw"in e?e.toRaw:a(P))(a(m).series)},null,8,["options","onDataPointSelection","series"])]),_:1})])}}}),X=Object.assign(V,{__name:"WriteupStatistics"});export{X as default};
